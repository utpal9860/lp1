#include<stdio.h>
#include<iostream>
#include<cstdlib>
#include<omp.h>
using namespace std;
#define MAX 100
int main()
{
	int a[MAX],b[MAX],c[MAX],i;
	printf("\n First Vector:\t");
	#pragma omp parallel for
	for(i=0;i<MAX;i++)
	{
	a[i]=rand()%1000;
        }
        for(i=0;i<MAX;i++)
	{
	 printf("%d\t",a[i]);
	}
	printf("\n Second Vector:\t");

        #pragma omp parallel for
        for(i=0;i<MAX;i++)
	{
        b[i]=rand()%1000;
	}
	for(i=0;i<MAX;i++)
	{
        printf("%d\t",b[i]);
	}
	printf("\n Parallel Vector Addition:(a,b,c)\t"); 
	

	#pragma omp parallel for
	for(i=0;i<MAX;i++)
	{
	c[i]=a[i]+b[i];
	}
	for(i=0;i<MAX;i++)
	{
	printf("\n%d\t%d\t%d",a[i],b[i],c[i]);
	}
 
}


/** OUTPUT

 ubuntu@ubuntu-HP-Notebook:~$ g++ addvector.cpp -fopenmp
ubuntu@ubuntu-HP-Notebook:~$ ./a.out

 First Vector:	383	386	492	649	421	362	27	690	59	763	926	540	426	172	736	211	368	567	429	782	530	862	123	67	135	335	456	42	373	919	87	808	276	178	788	584	403	651	754	399	932	60	676	368	739	12	226	586	94	539	886	915	537	324	370	862	996	281	305	925	84	327	336	505	846	729	313	857	124	895	582	545	814	367	434	777	793	929	802	22	58	69	167	393	11	229	421	784	198	315	413	526	91	980	956	873	170	364	43	750	
 Second Vector:	795	570	434	467	601	97	301	280	286	729	771	306	683	219	624	528	871	732	829	503	19	270	368	708	715	491	227	365	859	936	432	551	437	228	275	407	474	121	858	395	29	237	235	793	818	428	143	11	928	529	340	149	796	723	618	245	846	451	921	555	379	488	764	228	841	350	193	500	34	764	124	914	987	856	743	378	902	317	492	652	756	441	865	689	444	619	440	31	117	97	481	675	709	927	567	856	497	353	586	965	
 Parallel Vector Addition:(a,b,c)	
383	795	1178
386	570	956
492	434	926
649	467	1116
421	601	1022
362	97	459
27	301	328
690	280	970
59	286	345
763	729	1492
926	771	1697
540	306	846
426	683	1109
172	219	391
736	624	1360
211	528	739
368	871	1239
567	732	1299
429	829	1258
782	503	1285
530	19	549
862	270	1132
123	368	491
67	708	775
135	715	850
335	491	826
456	227	683
42	365	407
373	859	1232
919	936	1855
87	432	519
808	551	1359
276	437	713
178	228	406
788	275	1063
584	407	991
403	474	877
651	121	772
754	858	1612
399	395	794
932	29	961
60	237	297
676	235	911
368	793	1161
739	818	1557
12	428	440
226	143	369
586	11	597
94	928	1022
539	529	1068
886	340	1226
915	149	1064
537	796	1333
324	723	1047
370	618	988
862	245	1107
996	846	1842
281	451	732
305	921	1226
925	555	1480
84	379	463
327	488	815
336	764	1100
505	228	733
846	841	1687
729	350	1079
313	193	506
857	500	1357
124	34	158
895	764	1659
582	124	706
545	914	1459
814	987	1801
367	856	1223 
434	743	1177
777	378	1155
793	902	1695
929	317	1246
802	492	1294
22	652	674
58	756	814
69	441	510
167	865	1032
393	689	1082
11	444	455
229	619	848
421	440	861
784	31	815
198	117	315
315	97	412
413	481	894
526	675	1201
91	709	800
980	927	1907
956	567	1523
873	856	1729
170	497	667
364	353	717
43	586	629
750	965	1715  **/





